/*
 * This file is generated by jOOQ.
 */
package edu.java.scrapper.domain.jooq;


import edu.java.scrapper.domain.jooq.tables.Assignment;
import edu.java.scrapper.domain.jooq.tables.Chat;
import edu.java.scrapper.domain.jooq.tables.Event;
import edu.java.scrapper.domain.jooq.tables.Link;
import edu.java.scrapper.domain.jooq.tables.records.AssignmentRecord;
import edu.java.scrapper.domain.jooq.tables.records.ChatRecord;
import edu.java.scrapper.domain.jooq.tables.records.EventRecord;
import edu.java.scrapper.domain.jooq.tables.records.LinkRecord;

import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.13"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ChatRecord> CONSTRAINT_1 = Internal.createUniqueKey(Chat.CHAT, DSL.name("CONSTRAINT_1"), new TableField[] { Chat.CHAT.ID }, true);
    public static final UniqueKey<EventRecord> CONSTRAINT_3 = Internal.createUniqueKey(Event.EVENT, DSL.name("CONSTRAINT_3"), new TableField[] { Event.EVENT.ID }, true);
    public static final UniqueKey<LinkRecord> CONSTRAINT_2 = Internal.createUniqueKey(Link.LINK, DSL.name("CONSTRAINT_2"), new TableField[] { Link.LINK.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AssignmentRecord, ChatRecord> CONSTRAINT_5 = Internal.createForeignKey(Assignment.ASSIGNMENT, DSL.name("CONSTRAINT_5"), new TableField[] { Assignment.ASSIGNMENT.CHAT_ID }, Keys.CONSTRAINT_1, new TableField[] { Chat.CHAT.ID }, true);
    public static final ForeignKey<AssignmentRecord, LinkRecord> CONSTRAINT_5A = Internal.createForeignKey(Assignment.ASSIGNMENT, DSL.name("CONSTRAINT_5A"), new TableField[] { Assignment.ASSIGNMENT.LINK_ID }, Keys.CONSTRAINT_2, new TableField[] { Link.LINK.ID }, true);
    public static final ForeignKey<EventRecord, LinkRecord> CONSTRAINT_3F = Internal.createForeignKey(Event.EVENT, DSL.name("CONSTRAINT_3F"), new TableField[] { Event.EVENT.LINK_ID }, Keys.CONSTRAINT_2, new TableField[] { Link.LINK.ID }, true);
}
